#!/bin/bash
###################################
#
#  Let's Encrypt HAProxy script
#
###################################

# set PATH for all session
export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

DOMAINS=(
    all_domains
)

EMAIL="forwork.jan@gmail.com"
WEB_ROOT="/usr/share/nginx/html/"

#When cert is down to this many days
#It is allowed to renew
EXP_LIMIT=30;

#Only reload HAProxy if a cert was created/updated
RELOAD=false

#####################################
#
# Comment bind * 443 and reload config
#
#####################################
# read cert-list.cfg
missing_files=()
while read -r line; do
  # ignore comment lines and empty lines
  [[ "$line" =~ ^#.*$ || -z "$line" ]] && continue

  # check file exists
  if [[ ! -f "$line" ]]; then
    missing_files+=("$line")
  fi
done < /etc/haproxy/cert-list.cfg

if [[ ${#missing_files[@]} -gt 0 ]]; then
  echo "Missing some certs, we need to comment certs binding."
  sed -i 's|^ *bind   \*:443 ssl crt-list /etc/haproxy/cert-list.cfg|#&|' /usr/local/etc/haproxy/haproxy.cfg
  # haproxy -f /usr/local/etc/haproxy/haproxy.cfg
  supervisorctl restart haproxy
fi

#####################################
#
# Confirm bc command is installed
#
#####################################
command -v bc >> /dev/null
if [[ $? -ne 0 ]];
then
   echo ""
   echo "========================================================"
   echo ""
   echo "Error: cmd bc is not installed "
   echo "    To install run"
   echo "    sudo yum install bc"
   echo "========================================================"
   echo ""
   exit 1
fi

# print update time
echo "User: $(id -u -n) Update Time: $(date -d "now" +"%Y-%m-%d %H:%M:%S")"

# define combine certs function
function combine_certs() {
  local domain=$1
  mkdir -p /etc/haproxy/certs/  #location to place combine cert
  if [ -f "/etc/letsencrypt/live/$domain/fullchain.pem" ] && [ -s "/etc/letsencrypt/live/$domain/fullchain.pem" ] \
      && [ -f "/etc/letsencrypt/live/$domain/privkey.pem" ] && [ -s "/etc/letsencrypt/live/$domain/privkey.pem" ]; then
      COMBINED_FILE="/etc/haproxy/certs/${domain}.pem"
      echo "Creating $COMBINED_FILE with latest certs..."
      cat /etc/letsencrypt/live/$domain/fullchain.pem \
          /etc/letsencrypt/live/$domain/privkey.pem > $COMBINED_FILE
      # update RELOAD status
      RELOAD=true
  else
      echo "Error: Certificate files for $domain are missing or empty. Skipping..."
  fi
}

for domain in "${DOMAINS[@]}"
do
  CERT_FILE="/etc/letsencrypt/live/$domain/fullchain.pem"
  KEY_FILE="/etc/letsencrypt/live/$domain/privkey.pem"
  CERT_LIST_FILE="/etc/haproxy/cert-list.cfg"

  ##################################
  #
  # If no ssl for domain create it
  #
  ##################################
  if [ ! -f $CERT_FILE ]; then
    echo "Creating certificate for domain $domain."
    certbot certonly \
        --preferred-chain "ISRG Root X1" \
        --webroot --webroot-path $WEB_ROOT \
        --email $EMAIL \
        --no-eff-email \
        --agree-tos \
        -d $domain

    ###################################
    #
    # Combine certs for HAProxy and
    # Reload HAProxy
    #
    ###################################
    combine_certs $domain

  else
    ##################################
    #
    # Check How long cert is valid
    #
    ##################################
    EXP=$(date -d "`openssl x509 -in $CERT_FILE -text -noout|grep "Not After"|cut -c 25-`" +%s)
    DATE_NOW=$(date -d "now" +%s)
    DAYS_EXP=$(echo \( $EXP - $DATE_NOW \) / 86400 |bc)

    if [ "$DAYS_EXP" -gt "$EXP_LIMIT" ] ; then
      echo "$domain, no need for renewal ($DAYS_EXP days left)."
    else
      #################################
      #
      # Renew Certifcate
      #
      #################################
      echo "The certificate for $domain is about to expire soon."
      echo "Starting Let's Encrypt renewal script..."
      certbot certonly \
        --webroot --webroot-path $WEB_ROOT \
        --keep-until-expiring \
        --text \
        -v \
        --email $EMAIL \
        --agree-tos \
        -d $domain

      ###################################
      #
      # Combine certs for HAProxy and
      # Reload HAProxy
      #
      ###################################
      combine_certs $domain

    fi
  fi
done

# uncomment bind * 443, make certs work
sed -i 's/^#\( *bind *\*:443 ssl crt-list \/etc\/haproxy\/cert-list.cfg\)/\1/' /usr/local/etc/haproxy/haproxy.cfg

if [ "$RELOAD" = true ]
then
  echo " ========================= "
  echo " =                       = "
  echo " === Reloading HAProxy === "
  echo " =                       = "
  echo " ========================= "
#   haproxy -f /usr/local/etc/haproxy/haproxy.cfg -sf $(cat /var/run/haproxy.pid)
  supervisorctl restart haproxy
fi
